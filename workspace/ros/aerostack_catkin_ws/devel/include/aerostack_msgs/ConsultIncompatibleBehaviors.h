// Generated by gencpp from file aerostack_msgs/ConsultIncompatibleBehaviors.msg
// DO NOT EDIT!


#ifndef AEROSTACK_MSGS_MESSAGE_CONSULTINCOMPATIBLEBEHAVIORS_H
#define AEROSTACK_MSGS_MESSAGE_CONSULTINCOMPATIBLEBEHAVIORS_H

#include <ros/service_traits.h>


#include <aerostack_msgs/ConsultIncompatibleBehaviorsRequest.h>
#include <aerostack_msgs/ConsultIncompatibleBehaviorsResponse.h>


namespace aerostack_msgs
{

struct ConsultIncompatibleBehaviors
{

typedef ConsultIncompatibleBehaviorsRequest Request;
typedef ConsultIncompatibleBehaviorsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ConsultIncompatibleBehaviors
} // namespace aerostack_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::aerostack_msgs::ConsultIncompatibleBehaviors > {
  static const char* value()
  {
    return "c5d330496ecfd218e595c10931cf32d6";
  }

  static const char* value(const ::aerostack_msgs::ConsultIncompatibleBehaviors&) { return value(); }
};

template<>
struct DataType< ::aerostack_msgs::ConsultIncompatibleBehaviors > {
  static const char* value()
  {
    return "aerostack_msgs/ConsultIncompatibleBehaviors";
  }

  static const char* value(const ::aerostack_msgs::ConsultIncompatibleBehaviors&) { return value(); }
};


// service_traits::MD5Sum< ::aerostack_msgs::ConsultIncompatibleBehaviorsRequest> should match
// service_traits::MD5Sum< ::aerostack_msgs::ConsultIncompatibleBehaviors >
template<>
struct MD5Sum< ::aerostack_msgs::ConsultIncompatibleBehaviorsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::aerostack_msgs::ConsultIncompatibleBehaviors >::value();
  }
  static const char* value(const ::aerostack_msgs::ConsultIncompatibleBehaviorsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::aerostack_msgs::ConsultIncompatibleBehaviorsRequest> should match
// service_traits::DataType< ::aerostack_msgs::ConsultIncompatibleBehaviors >
template<>
struct DataType< ::aerostack_msgs::ConsultIncompatibleBehaviorsRequest>
{
  static const char* value()
  {
    return DataType< ::aerostack_msgs::ConsultIncompatibleBehaviors >::value();
  }
  static const char* value(const ::aerostack_msgs::ConsultIncompatibleBehaviorsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::aerostack_msgs::ConsultIncompatibleBehaviorsResponse> should match
// service_traits::MD5Sum< ::aerostack_msgs::ConsultIncompatibleBehaviors >
template<>
struct MD5Sum< ::aerostack_msgs::ConsultIncompatibleBehaviorsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::aerostack_msgs::ConsultIncompatibleBehaviors >::value();
  }
  static const char* value(const ::aerostack_msgs::ConsultIncompatibleBehaviorsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::aerostack_msgs::ConsultIncompatibleBehaviorsResponse> should match
// service_traits::DataType< ::aerostack_msgs::ConsultIncompatibleBehaviors >
template<>
struct DataType< ::aerostack_msgs::ConsultIncompatibleBehaviorsResponse>
{
  static const char* value()
  {
    return DataType< ::aerostack_msgs::ConsultIncompatibleBehaviors >::value();
  }
  static const char* value(const ::aerostack_msgs::ConsultIncompatibleBehaviorsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // AEROSTACK_MSGS_MESSAGE_CONSULTINCOMPATIBLEBEHAVIORS_H
