// Generated by gencpp from file aerostack_msgs/CheckBeliefFormat.msg
// DO NOT EDIT!


#ifndef AEROSTACK_MSGS_MESSAGE_CHECKBELIEFFORMAT_H
#define AEROSTACK_MSGS_MESSAGE_CHECKBELIEFFORMAT_H

#include <ros/service_traits.h>


#include <aerostack_msgs/CheckBeliefFormatRequest.h>
#include <aerostack_msgs/CheckBeliefFormatResponse.h>


namespace aerostack_msgs
{

struct CheckBeliefFormat
{

typedef CheckBeliefFormatRequest Request;
typedef CheckBeliefFormatResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct CheckBeliefFormat
} // namespace aerostack_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::aerostack_msgs::CheckBeliefFormat > {
  static const char* value()
  {
    return "0950bd055fb30d3ee142f3c8cb406a73";
  }

  static const char* value(const ::aerostack_msgs::CheckBeliefFormat&) { return value(); }
};

template<>
struct DataType< ::aerostack_msgs::CheckBeliefFormat > {
  static const char* value()
  {
    return "aerostack_msgs/CheckBeliefFormat";
  }

  static const char* value(const ::aerostack_msgs::CheckBeliefFormat&) { return value(); }
};


// service_traits::MD5Sum< ::aerostack_msgs::CheckBeliefFormatRequest> should match
// service_traits::MD5Sum< ::aerostack_msgs::CheckBeliefFormat >
template<>
struct MD5Sum< ::aerostack_msgs::CheckBeliefFormatRequest>
{
  static const char* value()
  {
    return MD5Sum< ::aerostack_msgs::CheckBeliefFormat >::value();
  }
  static const char* value(const ::aerostack_msgs::CheckBeliefFormatRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::aerostack_msgs::CheckBeliefFormatRequest> should match
// service_traits::DataType< ::aerostack_msgs::CheckBeliefFormat >
template<>
struct DataType< ::aerostack_msgs::CheckBeliefFormatRequest>
{
  static const char* value()
  {
    return DataType< ::aerostack_msgs::CheckBeliefFormat >::value();
  }
  static const char* value(const ::aerostack_msgs::CheckBeliefFormatRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::aerostack_msgs::CheckBeliefFormatResponse> should match
// service_traits::MD5Sum< ::aerostack_msgs::CheckBeliefFormat >
template<>
struct MD5Sum< ::aerostack_msgs::CheckBeliefFormatResponse>
{
  static const char* value()
  {
    return MD5Sum< ::aerostack_msgs::CheckBeliefFormat >::value();
  }
  static const char* value(const ::aerostack_msgs::CheckBeliefFormatResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::aerostack_msgs::CheckBeliefFormatResponse> should match
// service_traits::DataType< ::aerostack_msgs::CheckBeliefFormat >
template<>
struct DataType< ::aerostack_msgs::CheckBeliefFormatResponse>
{
  static const char* value()
  {
    return DataType< ::aerostack_msgs::CheckBeliefFormat >::value();
  }
  static const char* value(const ::aerostack_msgs::CheckBeliefFormatResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // AEROSTACK_MSGS_MESSAGE_CHECKBELIEFFORMAT_H
